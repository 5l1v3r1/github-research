(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 10.3' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[     16603,        451]
NotebookOptionsPosition[     15349,        402]
NotebookOutlinePosition[     15721,        418]
CellTagsIndexPosition[     15678,        415]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["Github Research", "Title",
 CellChangeTimes->{{3.670775913955821*^9, 3.670775940975821*^9}}],

Cell[CellGroupData[{

Cell["Exploratory work:", "Section",
 CellChangeTimes->{{3.670775958678321*^9, 3.670775963085821*^9}}],

Cell["\<\
Looked into a bunch of different tools for accessing and visualizing github, \
including scrapers, the API and the GH torrent database.\
\>", "Text",
 CellChangeTimes->{{3.670776290277321*^9, 3.670776310519821*^9}, {
  3.670776411107321*^9, 3.6707764618773212`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Repository Profiling:", "Section",
 CellChangeTimes->{{3.6707759766983213`*^9, 3.670775992395821*^9}}],

Cell["\<\
Found TensorFlow and CNTK as especially interesting repositories, having both \
launched at similar times. Created a bigger profile of repos:
\
\>", "Text",
 CellChangeTimes->{{3.670776471079821*^9, 3.670776557764821*^9}, {
  3.670776623109321*^9, 3.670776627059321*^9}}],

Cell[CellGroupData[{

Cell["Repo Profiles:", "Subsubsection",
 CellChangeTimes->{{3.670776632721821*^9, 3.670776636321821*^9}}],

Cell["\<\

Theano:
-Released 04/02/2009
-\[OpenCurlyDoubleQuote]Theano is a compiler for mathematical expressions in \
Python that combines the convenience of NumPy\[CloseCurlyQuote]s syntax with \
the speed of optimized native machine language.\[CloseCurlyDoubleQuote]
-Created by a small academic team, development has grown significantly. \
~22,000 commits, 211 contributors. Qualitatively, high community driven \
development.
-Built on top of other open source projects, BSD license here: \
http://deeplearning.net/software/theano/LICENSE.html
-No commit license, copyright consolidated.

Caffe:
-Based off of older project \[OpenCurlyDoubleQuote]caffeine\
\[CloseCurlyDoubleQuote], released github on Sept 8, 2013.
-Developed at Berkley vision and learning center, with community driven \
development at the outset. Designed for modularity. 
-Licensed under BSD 2-Clause : \
https://github.com/BVLC/caffe/blob/master/LICENSE
-~3,500 commits, 177 contributors. Qualitatively, smaller, but more involved \
community.
-No commit license, shared copyright model.

Torch7:
-Latest iteration of torch ML project (After Torch3, 4, and 5), released on \
github on Jan 22nd, 2012. (Torch3 released in 2002)
-Major contributors and maintainers from across industry and academia, with \
community driven package interfaces with Torch core. 
-BSD licensed: https://github.com/torch/torch7/blob/master/COPYRIGHT.txt
-~1000 commits, 78 contributors. Qualitatively very small core group of \
involved contributors. 
-No commit license. 

CNTK:
-Originally released on codeplex: https://cntk.codeplex.com/ on April 2014 \
with more restrictive license, then on Github on January 25th, 2016. 
-Released open source \[OpenCurlyDoubleQuote]Out of necessity\
\[CloseCurlyDoubleQuote] to speed up development.
-Custom license: https://github.com/Microsoft/CNTK/blob/master/LICENSE.md
-Contributor License Agreement required, copyright consolidated : \
https://cla.microsoft.com/cladoc/microsoft-contribution-license-agreement.pdf
-~4000 commits, 49 contributors. Almost entire community has multiple \
commits, seem involved. 

TensorFlow:
-Released November 1st, 2015.
-Based on caffe, tensorflow was designed with open source development at the \
core. \[OpenCurlyDoubleQuote]We hope to build an active open source community \
that drives the future of this library, both by providing feedback and by \
actively contributing to the source code.\[CloseCurlyDoubleQuote]
-Apache 2.0 licensed: \
https://github.com/tensorflow/tensorflow/blob/master/LICENSE
-CLA required, for individuals and companies: \
https://cla.developers.google.com/about/google-individual?csw=1 (General \
google CLA)
-~1500 commits, 100 contributors. Slightly wider community involvement than \
CNTK.

Other Interesting Candidates:

Deeplearning4j: https://github.com/deeplearning4j/deeplearning4j
\
\>", "Text",
 CellChangeTimes->{3.670776641509321*^9}]
}, Closed]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Datamining in Python:", "Section",
 CellChangeTimes->{{3.670776002368321*^9, 3.670776017640821*^9}}],

Cell["\<\
Built tooling in python to build adjaceny matricies of contributors. was \
difficult. We began with the base six repos and got all of the contributors \
of those. We created an adjacency matrix and wrote it out to a dl file. we \
then snowballed once, and tried to get all the repos the contributors had \
contributed to. github api doesn\[CloseCurlyQuote]t automatically get all the \
repos a person has contributed to, even though we know that Github stores it \
somewhere. Nevertheless, we came up with a system of getting of roughly \
getting the repositories the people had contributed to. we took all of the \
user\[CloseCurlyQuote]s individual repos and forked repos. we then checked if \
the contributors of that repo include any of the contributors we are \
watching. For the forked repos, we found their parent fork, and checked if \
the conributors of the parent repo included the people we were watching. This \
doesn\[CloseCurlyQuote]t include everyone, as some users contributed to repos \
in which they were collaborators, and thus didn\[CloseCurlyQuote]t show up on \
this graph. There were also projects that didn\[CloseCurlyQuote]t have any \
contributors that we were watching. Nevertheless, this was a decent \
approximation.\
\>", "Text",
 CellChangeTimes->{{3.6707766577193213`*^9, 3.6707767746676826`*^9}, {
  3.6707768489296713`*^9, 3.670776913348571*^9}, {3.6707769588338223`*^9, 
  3.6707769647966824`*^9}, {3.6707770114095087`*^9, 3.6707771515601997`*^9}, {
  3.6707772304318113`*^9, 3.6707773741917267`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Processing in ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 ":"
}], "Section",
 CellChangeTimes->{{3.670776024805821*^9, 3.670776033995821*^9}}],

Cell[CellGroupData[{

Cell["Imports:", "Subsubsection",
 CellChangeTimes->{{3.670777587756526*^9, 3.6707776105342665`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"cntkGraph", " ", "=", 
   RowBox[{
   "Import", "[", 
    "\"\</data1/user_data/github/github-research/graphExports/egocntk2.gml\>\"\
", "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.6707775583762074`*^9, 3.670777571261345*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Description:", "Subsubsection",
 CellChangeTimes->{{3.670777626054433*^9, 3.6707776418070974`*^9}}],

Cell[TextData[{
 "Using ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 ", we parsed the text output from the python datamining scripts. Using these \
adjacency matricies, after some post processing (removing self loops and \
triangularizing), we generated graphs of both the people to people and \
projects to projects. After this, we generated 6 ego graphs, one for each \
main repository we were considering. These would allow us to compare these \
repos networks in a much more vaulable way, having something to measure \
against. An example ego graph is here:"
}], "Text",
 CellChangeTimes->{{3.670777646482148*^9, 3.670777683700048*^9}, {
  3.670777725747995*^9, 3.670777909962483*^9}}]
}, Open  ]],

Cell["CNTK graph:", "Subsubsection",
 CellChangeTimes->{{3.6707779168275566`*^9, 3.6707779206650815`*^9}}],

Cell[CellGroupData[{

Cell["Results:", "Subsubsection",
 CellChangeTimes->{{3.670777925660082*^9, 3.6707779286525817`*^9}}],

Cell["\<\
We ran a suite of metrics on these six ego graphs, and got rather interesting \
results back: \
\>", "Text",
 CellChangeTimes->{{3.6707779362350817`*^9, 3.6707779851050816`*^9}}],

Cell[BoxData[
 TagBox[GridBox[{
    {"\"\<Name\>\"", "\"\<Theano\>\"", "\"\<Caffe\>\"", "\"\<CNTK\>\"", 
     "\"\<TensorFlow\>\"", "\"\<Torch7\>\"", "\"\<Deeplearning4J\>\""},
    {"\"\<Centrality\>\"", 
     TagBox[
      TagBox[GridBox[{
         {
          RowBox[{"1", "\[Rule]", "\"\<Theano:Theano 1.\>\""}]},
         {
          RowBox[{"1067", "\[Rule]", "\"\<changepoint:viveksck 1.\>\""}]},
         {
          RowBox[{"2024", "\[Rule]", "\"\<hemi:harrism 0.336103\>\""}]},
         {
          RowBox[{"2029", "\[Rule]", "\"\<AutoX:lucasb-eyer 1.\>\""}]},
         {
          RowBox[{
          "3638", "\[Rule]", 
           "\"\<box-plots-for-education:sergii-gavrylov 0.405807\>\""}]}
        },
        GridBoxAlignment->{
         "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, 
          "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
        GridBoxSpacings->{"Columns" -> {
            Offset[0.27999999999999997`], {
             Offset[0.5599999999999999]}, 
            Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
            Offset[0.2], {
             Offset[0.4]}, 
            Offset[0.2]}, "RowsIndexed" -> {}}],
       Column],
      Function[BoxForm`e$, 
       TableForm[BoxForm`e$]]], 
     TagBox[
      TagBox[GridBox[{
         {
          RowBox[{"2", "\[Rule]", "\"\<caffe:BVLC 1.\>\""}]},
         {
          RowBox[{"1360", "\[Rule]", "\"\<flann:mariusmuja 0.12122\>\""}]},
         {
          RowBox[{"5595", "\[Rule]", "\"\<erlport:hdima 0.153566\>\""}]},
         {
          RowBox[{
          "5765", "\[Rule]", 
           "\"\<rbgirshick.github.io:rbgirshick 0.139989\>\""}]},
         {
          RowBox[{
          "5883", "\[Rule]", "\"\<imsearch-tools:kencoken 0.263351\>\""}]},
         {
          RowBox[{
          "6100", "\[Rule]", "\"\<bigdata-apriori:boechat107 0.282852\>\""}]},
         {
          RowBox[{"6147", "\[Rule]", "\"\<cqstyle:crizCraig 0.132794\>\""}]},
         {
          RowBox[{"6382", "\[Rule]", "\"\<itorch-docker:kkoba84 1.\>\""}]},
         {
          RowBox[{
          "6753", "\[Rule]", "\"\<SPLTT-Release:jsupancic 0.169\>\""}]},
         {
          RowBox[{"7300", "\[Rule]", "\"\<CVPR15-CFSS:zhusz 0.165343\>\""}]},
         {
          RowBox[{
          "7937", "\[Rule]", "\"\<savage_jar_beasts:sjbrown 0.187247\>\""}]},
         {
          RowBox[{"8541", "\[Rule]", "\"\<ba_thesis:panmari 0.215508\>\""}]},
         {
          RowBox[{
          "12232", "\[Rule]", "\"\<resnet-1k-layers:KaimingHe 0.131662\>\""}]}
        },
        GridBoxAlignment->{
         "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, 
          "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
        GridBoxSpacings->{"Columns" -> {
            Offset[0.27999999999999997`], {
             Offset[0.5599999999999999]}, 
            Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
            Offset[0.2], {
             Offset[0.4]}, 
            Offset[0.2]}, "RowsIndexed" -> {}}],
       Column],
      Function[BoxForm`e$, 
       TableForm[BoxForm`e$]]], 
     TagBox[
      TagBox[GridBox[{
         {
          RowBox[{"3", "\[Rule]", "\"\<CNTK:Microsoft 1.\>\""}]},
         {
          RowBox[{"4676", "\[Rule]", "\"\<frontend:guardian 0.120179\>\""}]}
        },
        GridBoxAlignment->{
         "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, 
          "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
        GridBoxSpacings->{"Columns" -> {
            Offset[0.27999999999999997`], {
             Offset[0.5599999999999999]}, 
            Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
            Offset[0.2], {
             Offset[0.4]}, 
            Offset[0.2]}, "RowsIndexed" -> {}}],
       Column],
      Function[BoxForm`e$, 
       TableForm[BoxForm`e$]]], 
     TagBox[
      TagBox[GridBox[{
         {
          RowBox[{"4", "\[Rule]", "\"\<tensorflow:tensorflow 1.\>\""}]},
         {
          RowBox[{"9353", "\[Rule]", "\"\<leveldb:basho 0.935033\>\""}]},
         {
          RowBox[{"9763", "\[Rule]", "\"\<keystone:concretevitamin 1.\>\""}]}
        },
        GridBoxAlignment->{
         "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, 
          "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
        GridBoxSpacings->{"Columns" -> {
            Offset[0.27999999999999997`], {
             Offset[0.5599999999999999]}, 
            Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
            Offset[0.2], {
             Offset[0.4]}, 
            Offset[0.2]}, "RowsIndexed" -> {}}],
       Column],
      Function[BoxForm`e$, 
       TableForm[BoxForm`e$]]], 
     TagBox[
      TagBox[GridBox[{
         {
          RowBox[{"5", "\[Rule]", "\"\<torch7:torch 1.\>\""}]}
        },
        GridBoxAlignment->{
         "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, 
          "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
        GridBoxSpacings->{"Columns" -> {
            Offset[0.27999999999999997`], {
             Offset[0.5599999999999999]}, 
            Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
            Offset[0.2], {
             Offset[0.4]}, 
            Offset[0.2]}, "RowsIndexed" -> {}}],
       Column],
      Function[BoxForm`e$, 
       TableForm[BoxForm`e$]]], 
     TagBox[
      TagBox[GridBox[{
         {
          RowBox[{"6", "\[Rule]", "\"\<deeplearning4j:deeplearning4j 1.\>\""}]}
        },
        GridBoxAlignment->{
         "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, 
          "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
        GridBoxSpacings->{"Columns" -> {
            Offset[0.27999999999999997`], {
             Offset[0.5599999999999999]}, 
            Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
            Offset[0.2], {
             Offset[0.4]}, 
            Offset[0.2]}, "RowsIndexed" -> {}}],
       Column],
      Function[BoxForm`e$, 
       TableForm[BoxForm`e$]]]},
    {"\"\<Number of Verticies\>\"", "4048", "3120", "421", "2314", "10080", 
     "9125"},
    {"\"\<Number of Edges\>\"", "260248", "240628", "20681", "68400", 
     "34441025", "34252587"},
    {"\"\<Mean Vertex Degree\>\"", "128.5810276679842`", 
     "154.24871794871794`", "98.24703087885986`", "59.118409680207435`", 
     "6833.536706349207`", "7507.416328767124`"},
    {"\"\<GlobalClusteringCoefficient\>\"", "0.6740180738951287`", 
     "0.6609172430156669`", "0.9617937827320717`", "0.35081730200338523`", 
     "0.9992384851961124`", "0.9999233302709254`"},
    {"\"\<MeanClusteringCoefficient\>\"", "0.9562337969571323`", 
     "0.9699701145227063`", "0.9492211395902883`", "0.9565637962352216`", 
     "0.9898464633252129`", "0.996300427072987`"},
    {"\"\<GraphAssociativity\>\"", 
     RowBox[{"-", "0.0656021278419638`"}], 
     RowBox[{"-", "0.21045282710586685`"}], "0.6448656128638632`", 
     RowBox[{"-", "0.07274026012799396`"}], "0.9216977649096639`", 
     "0.9192953067360277`"}
   },
   AutoDelete->False,
   GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Grid"]], "Input"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
},
Evaluator->"Deepthought",
WindowSize->{1920, 1038},
WindowMargins->{{-8, Automatic}, {Automatic, -8}},
FrontEndVersion->"10.3 for Microsoft Windows (64-bit) (October 9, 2015)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 98, 1, 101, "Title"],
Cell[CellGroupData[{
Cell[703, 27, 102, 1, 70, "Section"],
Cell[808, 30, 276, 5, 30, "Text"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1121, 40, 108, 1, 70, "Section"],
Cell[1232, 43, 281, 6, 49, "Text"],
Cell[CellGroupData[{
Cell[1538, 53, 105, 1, 39, "Subsubsection"],
Cell[1646, 56, 2913, 65, 771, "Text"]
}, Closed]]
}, Open  ]],
Cell[CellGroupData[{
Cell[4608, 127, 106, 1, 70, "Section"],
Cell[4717, 130, 1546, 22, 87, "Text"]
}, Open  ]],
Cell[CellGroupData[{
Cell[6300, 157, 169, 6, 70, "Section"],
Cell[CellGroupData[{
Cell[6494, 167, 101, 1, 39, "Subsubsection"],
Cell[6598, 170, 265, 7, 31, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[6900, 182, 105, 1, 39, "Subsubsection"],
Cell[7008, 185, 697, 13, 49, "Text"]
}, Open  ]],
Cell[7720, 201, 106, 1, 39, "Subsubsection"],
Cell[CellGroupData[{
Cell[7851, 206, 101, 1, 33, "Subsubsection"],
Cell[7955, 209, 188, 4, 30, "Text"],
Cell[8146, 215, 7163, 182, 335, "Input"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}
]
*)

(* End of internal cache information *)
